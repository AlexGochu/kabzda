{"version":3,"file":"static/js/672.61a13ea8.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormControls/FormControls.js","hoc/withAuthRedirect.jsx","utils/validators/validators.js","webpack://react-kabzda-1/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__-kqrV\",\"dialogsItems\":\"Dialogs_dialogsItems__UyeG9\",\"active\":\"Dialogs_active__fE8te\",\"dialog\":\"Dialogs_dialog__LvKzO\",\"messages\":\"Dialogs_messages__Fpi4H\",\"message\":\"Dialogs_message__TeclG\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({name, id}) => {\r\n    const path = `/dialogs/${id}`\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}><NavLink to={path}>{name}</NavLink></div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = ({message}) => {\r\n    return (<div className={classes.message}>{message}</div>)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {TextArea} from '../common/FormControls/FormControls';\r\nimport {maxLengthCreator, required} from '../../utils/validators/validators';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"messageBody\"\r\n          placeholder=\"Enter you message\"\r\n          component={TextArea}\r\n          validate={[required, maxLength100]}\r\n        ></Field>\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogMessageForm'})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n  // const {dialogPage: {dialogs, messages}, sendMessage, updateNewMessageBody} = props;\r\n  const {dialogPage: {dialogs, messages}, sendMessage} = props;\r\n  const dialogsElements = dialogs.map(dialog => (\r\n    <DialogItem key={dialog.id} id={dialog.id} name={dialog.name}/>));\r\n\r\n  const messagesElements = messages.map(msg => (<Message key={msg.id} message={msg.message}/>));\r\n\r\n  const addNewMessage = (values) => {\r\n    sendMessage(values.messageBody);\r\n  };\r\n  if (props.isAuth === false) {\r\n    return <Navigate to={'/login'}/>;\r\n  }\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>);\r\n};\r\nexport default Dialogs;","import {sendMessageCreator} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirectComponent} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {\r\n            dispatch(sendMessageCreator(text));\r\n        }\r\n    };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirectComponent)(Dialogs);","import React from 'react';\r\nimport classes from './FormControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nconst FormControl = ({meta: {error, touched}, children}) => {\r\n  const hasError = error && touched;\r\n  return (\r\n    <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\r\n      <div>{children}</div>\r\n      <div>\r\n        {hasError && <span>{error}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextArea = (props) => {\r\n  const {input, meta, child, ...rest} = props;\r\n  return (\r\n    <FormControl {...props}><textarea {...input} {...rest} /></FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...rest} = props;\r\n  return (\r\n    <FormControl {...props}><input {...input} {...rest} /></FormControl>\r\n  );\r\n};\r\nexport const createField = (placeholder, name, component, validators, rest, text=\"\") => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      component={component}\r\n      validate={validators}\r\n      {...rest}\r\n    />{text}\r\n  </div>);","import {Navigate} from 'react-router-dom';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={'/login'}/>;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps, null)(RedirectComponent);\r\n\r\n};","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__dZ8Ac\",\"error\":\"FormControls_error__jN+2o\",\"formSummaryError\":\"FormControls_formSummaryError__frsk5\"};"],"names":["name","id","path","className","classes","to","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","required","dialogPage","dialogs","messages","sendMessage","dialogsElements","map","dialog","messagesElements","msg","isAuth","values","messageBody","compose","connect","state","dispatch","text","sendMessageCreator","withAuthRedirectComponent","Dialogs","FormControl","meta","error","touched","children","hasError","input","rest","child","Input","createField","validators","mapStateToProps","auth","Component","RedirectComponent","this","React","value","maxLength","length"],"sourceRoot":""}