{"version":3,"file":"static/js/797.cfd02cdd.chunk.js","mappings":"sNAyBMA,GAAiBC,EAAAA,EAAAA,GAAU,CAC/BC,KAAM,SADeD,EAhBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAChC,OACE,kBAAMC,SAAUF,EAAhB,WACGG,EAAAA,EAAAA,IAAY,QAAS,QAASC,EAAAA,GAAO,CAACC,EAAAA,KACtCF,EAAAA,EAAAA,IAAY,WAAY,WAAYC,EAAAA,GAAO,CAACC,EAAAA,GAAW,CAACC,KAAM,cAC9DH,EAAAA,EAAAA,IAAY,GAAI,aAAcC,EAAAA,GAAO,GAAI,CAACE,KAAM,YAAa,eAC7DL,IAAS,gBAAKM,UAAWC,EAAAA,EAAAA,iBAAhB,SACPP,KAEH,0BACE,8CA+BFQ,EAAqB,CACzBC,MAAAA,EAAAA,IAGF,WAAeC,EAAAA,EAAAA,KARS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,OACnBE,OAAQH,EAAME,KAAKC,UAMmBN,EAAxC,EAzBc,SAACO,GAIX,OAAIA,EAAMH,QAAUG,EAAMD,QACjB,SAAC,KAAD,CAAUE,GAAI,YAAcD,EAAMD,UAKzC,4BACE,mCACA,SAAClB,EAAD,CAAgBK,SAXH,SAACgB,GAChBF,EAAMN,MAAMQ,EAASC,MAAOD,EAASE,SAAUF,EAASG,sB,2NC1BxDC,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOtB,EAA+B,EAA/BA,MAAOuB,EAAwB,EAAxBA,QAAUC,EAAc,EAAdA,SACtCC,EAAWzB,GAASuB,EAC1B,OACE,iBAAKjB,UAAWC,EAAAA,EAAAA,YAAsB,KAAOkB,EAAWlB,EAAAA,EAAAA,MAAgB,IAAxE,WACE,yBAAMiB,KACN,yBACGC,IAAY,0BAAOzB,UAMf0B,EAAW,SAACX,GACvB,IAAOY,EAA+BZ,EAA/BY,MAAuBC,GAAQb,EAAxBO,KAAwBP,EAAlBc,OAApB,OAAsCd,EAAtC,IACA,OACE,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,uCAAcY,GAAWC,QAIxCzB,EAAQ,SAACY,GACpB,IAAOY,EAA+BZ,EAA/BY,MAAuBC,GAAQb,EAAxBO,KAAwBP,EAAlBc,OAApB,OAAsCd,EAAtC,IACA,OACE,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,oCAAWY,GAAWC,QAGrC1B,EAAc,SAAC4B,EAAaC,EAAMC,EAAWC,EAAYL,GAA3C,IAAiDM,EAAjD,uDAAsD,GAAtD,OACzB,4BACE,SAAC,KAAD,QACEJ,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXG,SAAUF,GACNL,IACHM,O,4ECtCA,IAAM9B,EAAW,SAAAgC,GACtB,IAAIA,EACJ,MAAO,qBAEIC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GAC3C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCJhC,KAAgB,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB","sources":["components/Login/Login.jsx","components/common/FormControls/FormControls.js","utils/validators/validators.js","webpack://react-kabzda-1/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../common/FormControls/FormControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {login} from '../../redux/authReducer';\r\nimport {connect} from 'react-redux';\r\nimport {Navigate} from 'react-router-dom';\r\nimport classes from '../common/FormControls/FormControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField('Email', 'email', Input, [required])}\r\n      {createField('Password', 'password', Input, [required], {type: 'password'})}\r\n      {createField('', 'rememberMe', Input, [], {type: 'checkbox'}, \"remember me\" )}\r\n      {error && <div className={classes.formSummaryError}>\r\n        {error}\r\n      </div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n      props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n    if (props.isAuth && props.userId) {\r\n      return <Navigate to={'/profile/' + props.userId}/>;\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n      </div>\r\n    );\r\n  }\r\n;\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  userId: state.auth.userId\r\n});\r\nconst mapDispatchToProps = {\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport classes from './FormControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nconst FormControl = ({meta: {error, touched}, children}) => {\r\n  const hasError = error && touched;\r\n  return (\r\n    <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\r\n      <div>{children}</div>\r\n      <div>\r\n        {hasError && <span>{error}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextArea = (props) => {\r\n  const {input, meta, child, ...rest} = props;\r\n  return (\r\n    <FormControl {...props}><textarea {...input} {...rest} /></FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...rest} = props;\r\n  return (\r\n    <FormControl {...props}><input {...input} {...rest} /></FormControl>\r\n  );\r\n};\r\nexport const createField = (placeholder, name, component, validators, rest, text=\"\") => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      component={component}\r\n      validate={validators}\r\n      {...rest}\r\n    />{text}\r\n  </div>);","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__dZ8Ac\",\"error\":\"FormControls_error__jN+2o\",\"formSummaryError\":\"FormControls_formSummaryError__frsk5\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","type","className","classes","mapDispatchToProps","login","connect","state","isAuth","auth","userId","props","to","formData","email","password","rememberMe","FormControl","meta","touched","children","hasError","TextArea","input","rest","child","placeholder","name","component","validators","text","validate","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}