{"version":3,"file":"static/js/172.615a5fec.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormControls/FormControls.js","hoc/withAuthRedirect.jsx","utils/validators/validators.js","webpack://react-kabzda-1/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__yy7ZC\",\"image\":\"ProfileInfo_image__ylp1C\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = ({statusProps, updateUserStatus}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    setStatus(statusProps);\r\n  }, [statusProps]);\r\n\r\n  const toggleEditMode = () => {\r\n    if (editMode) {\r\n      updateUserStatus(status || '');\r\n    }\r\n    setEditMode(!editMode);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editMode ?\r\n        (\r\n          <div>\r\n            <input\r\n              autoFocus={true}\r\n              value={status}\r\n              onBlur={toggleEditMode}\r\n              onChange={onStatusChange}/>\r\n          </div>\r\n\r\n        ) :\r\n        (\r\n          <div>\r\n            <span onDoubleClick={toggleEditMode}>{status || 'No status'}</span>\r\n          </div>\r\n        )\r\n      }\r\n    </div>);\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/icons-user.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n  if (!profile) return <Preloader/>;\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={`${profile.photos.large ? profile.photos.large : userPhoto}`} className={classes.image} alt=\"\"/>\r\n        <ProfileStatusWithHooks statusProps={status} updateUserStatus={updateUserStatus}/>\r\n        {`${profile.fullName ? profile.fullName : ''}`}\r\n        {`${profile.aboutMe ? profile.aboutMe : ''}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__6y0Ba\",\"posts\":\"MyPosts_posts__FiSm1\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__jfPqD\"};","import React from 'react';\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src=\"https://avatarfiles.alphacoders.com/894/thumb-89421.jpg\"\r\n                alt=\"\"\r\n            />\r\n            {props.message}\r\n            <div>{`Liked: ${props.likeCount} time(s)`}</div>\r\n            <div>\r\n                <span>like</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {TextArea} from '../../common/FormControls/FormControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={TextArea}\r\n          name=\"newPost\"\r\n          placeholder=\"Post...\"\r\n          validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'postsForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n  const postsElement = props.posts.map(post => <Post key={post.id}\r\n                                                     message={post.message}\r\n                                                     likeCount={post.likeCount}/>);\r\n\r\n  const onAddNewPost = (values) => {\r\n    props.addPost(values.newPost);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddNewPost}/>\r\n      <div className={classes.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(MyPosts);\r\n","import {addPostActionCreator} from '../../../redux/profileReducer';\r\n\r\nimport {connect} from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      dispatch(addPostActionCreator(text));\r\n    },\r\n\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo {...props}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from '../../redux/profileReducer';\r\nimport {withRouter} from '../../hoc/withRouter';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirectComponent} from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfileComponent extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const userId = this.props.router.params['*'] || this.props.authorizedUserId;\r\n    if (!userId) {\r\n      this.props.router.navigate('/login', {replace: true});\r\n      //return <Navigate to={'/login'}/>;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus\r\n};\r\n//\r\nexport default compose(withAuthRedirectComponent, withRouter, connect(mapStateToProps, mapDispatchToProps))(ProfileComponent);\r\n","import React from 'react';\r\nimport classes from './FormControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nconst FormControl = ({meta: {error, touched}, children}) => {\r\n  const hasError = error && touched;\r\n  return (\r\n    <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\r\n      <div>{children}</div>\r\n      <div>\r\n        {hasError && <span>{error}</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextArea = (props) => {\r\n  const {input, meta, child, ...rest} = props;\r\n  return (\r\n    <FormControl {...props}><textarea {...input} {...rest} /></FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...rest} = props;\r\n  return (\r\n    <FormControl {...props}><input {...input} {...rest} /></FormControl>\r\n  );\r\n};\r\nexport const createField = (placeholder, name, component, validators, rest, text=\"\") => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      component={component}\r\n      validate={validators}\r\n      {...rest}\r\n    />{text}\r\n  </div>);","import {Navigate} from 'react-router-dom';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={'/login'}/>;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps, null)(RedirectComponent);\r\n\r\n};","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__dZ8Ac\",\"error\":\"FormControls_error__jN+2o\",\"formSummaryError\":\"FormControls_formSummaryError__frsk5\"};"],"names":["statusProps","updateUserStatus","useState","editMode","setEditMode","status","setStatus","useEffect","toggleEditMode","autoFocus","value","onBlur","onChange","e","currentTarget","onDoubleClick","profile","className","classes","src","photos","large","userPhoto","alt","fullName","aboutMe","Preloader","props","message","likeCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","MyPosts","postsElement","posts","map","post","id","values","addPost","newPost","React","connect","state","profilePage","newPostText","dispatch","text","addPostActionCreator","ProfileComponent","userId","this","router","params","authorizedUserId","navigate","replace","getUserProfile","getUserStatus","mapDispatchToProps","compose","withAuthRedirectComponent","withRouter","auth","isAuth","FormControl","meta","error","touched","children","hasError","input","rest","child","Input","createField","validators","mapStateToProps","Component","RedirectComponent","to","maxLength","length"],"sourceRoot":""}